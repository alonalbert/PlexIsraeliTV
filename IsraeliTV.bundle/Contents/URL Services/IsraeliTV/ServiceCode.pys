METADATA_URL = 'http://www.nbc.com/assets/esp/mobile/PortalFeedV0140/portalGetFullVideoDetail/.json?video_id=%s'
VIDEO_URL = 'https://secure.services.nbc.nbcuni.com/mobile/PortalFeedV0140/portalGetVideoURL/.json?videoId=%s'
THUMB_URL = 'http://video.nbc.com/player/mezzanine/image.php?w=640&h=360&trusted=yes&path=%s'

HTTP_HEADERS = {
    'User-Agent': 'Appcelerator Titanium/1.8.3.07172012 (iPad/6.1.3; iPhone OS; en_US;)'
}

RE_VIDEO_ID = Regex('(nbc|latenightwithjimmyfallon|jaylenosgarage).com/((?!Vintage_Shows).+/)?video/.+?/(?P<id>n\d{4,})')

AudioStreamObject.language_code = Locale.Language.English

####################################################################################################
def NormalizeURL(url):

    return url

####################################################################################################
def MetadataObjectForURL(url):

    return VideoClipObject(
        title = "title",
        summary = "summary",
#        duration = duration,
#        thumb = Resource.ContentsOfURLWithFallback(thumb),
    )

####################################################################################################
def MediaObjectsForURL(url):
    return [
        MediaObject(
            parts = [
                PartObject(
                    key=HTTPLiveStreamURL(Callback(PlayVideo, url=url))
                )
            ],
            video_resolution = '480',
#            aspect_ratio = '1.33',
            audio_channels = 2,
            optimized_for_streaming = True
        )
    ]

####################################################################################################
@indirect
def PlayVideo(url):
    Log("PlayVideo: URL=%s" % (url))
    playlist = HTTP.Request(url)
    cookie = playlist.headers['set-cookie']
    Log("PlayVideo: Cookie=%s" % (cookie))

    return IndirectResponse(VideoClipObject,
        key = HTTPLiveStreamURL(url),
        http_cookies = cookie
    )

####################################################################################################
def TestURLs():

    test_urls = []
    page = HTML.ElementFromURL('http://www.nbc.com/video/library/')

    # Full episodes
    result = page.xpath('//div[@id="header-full-eps"]//li/a/@href')[0:2]
    for url in result:
        if not url.startswith('http://'):
            url = 'http://www.nbc.com%s' % url
        test_urls.append(url)

    # Video clips
    result = page.xpath('//div[@id="header-video-clips"]//li/a/@href')[0:2]
    for url in result:
        if not url.startswith('http://'):
            url = 'http://www.nbc.com%s' % url

        test_urls.append(url)

    return test_urls
